// <auto-generated />
using System;
using System.Reflection.Metadata;
using Ambev.DeveloperEvaluation.Domain.Entities;
using Ambev.DeveloperEvaluation.ORM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Ambev.DeveloperEvaluation.ORM.Migrations
{
    [DbContext(typeof(DefaultContext))]
    [Migration("20241014011203_InitialMigrations")]
    partial class InitialMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

			//modelBuilder.Entity<User>()
			//	.HasOne(s => s.Name)
			//	.WithOne()
			//	.HasForeignKey<PersonName>(p => p.Id)
			//	;
			//modelBuilder.Entity<User>()
			//	.HasOne(s => s.Address)
			//	.WithOne()
			//	.HasForeignKey<PersonAddress>(p => p.Id)
			//	;

			//modelBuilder.Entity<Sale>()
			//	.HasMany(s => s.Products)
			//	.WithOne(s => s.Sale)
			//	.HasForeignKey(p => p.SaleId)
			//	;
			//modelBuilder.Entity<Sale>()
			//	.HasOne(s => s.Customer)
			//	.WithOne()
			//	.HasForeignKey<Customer>(c => c.Id)
			//	;

			//modelBuilder.Entity<SaleProduct>()
			//	.HasOne(s => s.Product)
			//	.WithOne()
			//	.HasForeignKey<Product>(p => p.Id)
			//	;
			//modelBuilder.Entity<SaleProduct>()
			//	.HasOne(s => s.Sale)
			//	.WithOne()
			//	.HasForeignKey<Sale>(s => s.Id)
			//	;


#pragma warning restore 612, 618
		}
	}
}
